name: CI tests
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, beta, nightly, 1.40.0, macos, windows, mingw]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
          - build: nightly
            os: ubuntu-latest
            rust: nightly
          - build: 1.40.0
            os: ubuntu-latest
            rust: nightly
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable
          - build: mingw
            os: windows-latest
            rust: stable-x86_64-gnu
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
      - run: cargo test --manifest-path ./miniz_oxide/Cargo.toml
      - run: cargo test --manifest-path ./miniz_oxide/Cargo.toml --features simd
      - run: cargo build --manifest-path ./miniz_oxide/Cargo.toml --no-default-features
      - run: cargo test

  # rustfmt:
  #   name: Rustfmt
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         components: rustfmt # seems to not work?
  #         toolchain: stable
  #     - run: rustup toolchain install stable --component rustfmt
  #     - run: cargo fmt -p miniz_oxide -- --check

  wasm:
    name: WebAssembly
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [wasm32-unknown-unknown, wasm32-wasi]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
      - run: cargo build -p miniz_oxide --target ${{ matrix.target }}
